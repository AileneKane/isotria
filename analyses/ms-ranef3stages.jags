

model {
    # -------------------------------------------------
    # Parameters:
    # sV: survival probability for nonreproductive plants
    # sF: survival probability for reproductive plants
    # sU: survival probability for dormant plants
    # fV: reproduction probability for vegetative plants
    # fF: reproduction probability for reproductive plants
    # fU: reproduction probability for dormant plants
    # dV: dormancy probability for nonreproductive plants
    # dF: dormancy probability for reproductive plants
    # dU: dormancy probability for dormant plants
    # -------------------------------------------------
    # States (S):
    # 1 vegetation
    # 2 reproductive
    # 3 dormant
    # 4 dead
    # Observations (O):  
    # 1 seen vegetative
    # 2 seen reproductive
    # 3 not seen
    # -------------------------------------------------
    
    # Model, priors and constraints
    for (i in 1:nind){
    for (t in f[i]:(n.occasions-1)){
    logit(sV[i,t]) <- eta.sV[group[i],t]
    logit(sF[i,t]) <- eta.sF[group[i],t]
    logit(sU[i,t]) <- eta.sU[group[i],t]
    logit(fV[i,t]) <- eta.fV[group[i],t]
    logit(fF[i,t]) <- eta.fF[group[i],t]
    logit(fU[i,t]) <- eta.fU[group[i],t]
    logit(dV[i,t]) <- eta.dV[group[i],t]
    logit(dF[i,t]) <- eta.dF[group[i],t]
    logit(dU[i,t]) <- eta.dU[group[i],t]
    }#t
    }#i
    for (g in 1:2){#group  
    for (t in 1:(n.occasions-1)){
    eta.sV[g,t]  <-mu.sV[g]+beta.sV[g]*x[g,t]+beta1.sV[g]*x1[g,t]+epsilon.sV[g,t]
    eta.sF[g,t]  <-mu.sF[g]+beta.sF[g]*x[g,t]+beta1.sF[g]*x1[g,t]+epsilon.sF[g,t]
    eta.sU[g,t]  <-mu.sU[g]+beta.sU[g]*x[g,t]+beta1.sU[g]*x1[g,t]+epsilon.sU[g,t]
    eta.fV[g,t]  <-mu.fV[g]+beta.fV[g]*x[g,t]+beta1.fV[g]*x1[g,t]+epsilon.fV[g,t]
    eta.fF[g,t]  <-mu.fF[g]+beta.fF[g]*x[g,t]+beta1.fF[g]*x1[g,t]+epsilon.fF[g,t]
    eta.fU[g,t]  <-mu.fU[g]+beta.fU[g]*x[g,t]+beta1.fU[g]*x1[g,t]+epsilon.fU[g,t]
    eta.dV[g,t]  <-mu.dV[g]+beta.dV[g]*x[g,t]+beta1.dV[g]*x1[g,t]+epsilon.dV[g,t]
    eta.dF[g,t]  <-mu.dF[g]+beta.dF[g]*x[g,t]+beta1.dF[g]*x1[g,t]+epsilon.dF[g,t]
    eta.dU[g,t]  <-mu.dU[g]+beta.dU[g]*x[g,t]+beta1.dU[g]*x1[g,t]+epsilon.dU[g,t]
    epsilon.sV[g,t]~dnorm(0,tau.sV[g])#could move all the mean stuff to this part, might help model mix better? hierarchical centering
    epsilon.sF[g,t]~dnorm(0,tau.sF[g])
    epsilon.sU[g,t]~dnorm(0,tau.sU[g])
    epsilon.fV[g,t]~dnorm(0,tau.fV[g])
    epsilon.fF[g,t]~dnorm(0,tau.fF[g])
    epsilon.fU[g,t]~dnorm(0,tau.fU[g])
    epsilon.dV[g,t]~dnorm(0,tau.dV[g])
    epsilon.dF[g,t]~dnorm(0,tau.dF[g])
    epsilon.dU[g,t]~dnorm(0,tau.dU[g])
      }#t
    mean.sV[g]~dunif(0,1)# Priors for mean group-specific survival for veg plants
    mu.sV[g]<-log(mean.sV[g]/(1-mean.sV[g]))  
    mean.sF[g]~dunif(0,1)# Priors for mean group-specific survivalsurvival for rep plants
    mu.sF[g]<-log(mean.sF[g]/(1-mean.sF[g]))    
    mean.sU[g]~dunif(0,1)# Priors for mean group-specific survivalsurvival for rep plants
    mu.sU[g]<-log(mean.sU[g]/(1-mean.sU[g])) 
    mean.fV[g]~dunif(0,1)# Priors for mean group-specific transition from veg to rep plants
    mu.fV[g]<-log(mean.fV[g]/(1-mean.fV[g]))       
    mean.fF[g]~dunif(0,1)# Priors for mean group-specific transition from rep to veg plants
    mu.fF[g]<-log(mean.fF[g]/(1-mean.fF[g]))    
    mean.fU[g]~dunif(0,1)# Priors for mean group-specific transition from rep to veg plants
    mu.fU[g]<-log(mean.fU[g]/(1-mean.fU[g])) 
    mean.dV[g]~dunif(0,1)# Priors for mean group-specific transition from veg to rep plants
    mu.dV[g]<-log(mean.dV[g]/(1-mean.dV[g]))       
    mean.dF[g]~dunif(0,1)# Priors for mean group-specific transition from rep to veg plants
    mu.dF[g]<-log(mean.dF[g]/(1-mean.dF[g]))    
    mean.dU[g]~dunif(0,1)# Priors for mean group-specific transition from rep to veg plants
    mu.dU[g]<-log(mean.dU[g]/(1-mean.dU[g])) 
    sigma.sV[g]~dunif(0,10)#temporal variance for veg plants survival
    tau.sV[g]<-pow(sigma.sV[g],-2)
    sigma.sV2[g]<-pow(sigma.sV[g],2)
    sigma.sF[g]~dunif(0,10)#temporal variance for rep plants survival
    tau.sF[g]<-pow(sigma.sF[g],-2)
    sigma.sF2[g]<-pow(sigma.sF[g],2)
    sigma.sU[g]~dunif(0,10)#temporal variance for rep plants survival
    tau.sU[g]<-pow(sigma.sU[g],-2)
    sigma.sU2[g]<-pow(sigma.sU[g],2)
    sigma.fV[g]~dunif(0,10)#temporal variance for veg plants transition to rep
    tau.fV[g]<-pow(sigma.fV[g],-2)
    sigma.fV2[g]<-pow(sigma.fV[g],2)
    sigma.fF[g]~dunif(0,10)#temporal variance for rep plants transition to veg
    tau.fF[g]<-pow(sigma.fF[g],-2)
    sigma.fF2[g]<-pow(sigma.fF[g],2)
    sigma.fU[g]~dunif(0,10)#temporal variance for rep plants transition to veg
    tau.fU[g]<-pow(sigma.fU[g],-2)
    sigma.fU2[g]<-pow(sigma.fU[g],2)
    sigma.dV[g]~dunif(0,10)#temporal variance of dormancy for veg plants 
    tau.dV[g]<-pow(sigma.dV[g],-2)
    sigma.dV2[g]<-pow(sigma.dV[g],2)
    sigma.dF[g]~dunif(0,10)#temporal variance of dormancy for rep plants
    tau.dF[g]<-pow(sigma.dF[g],-2)
    sigma.dF2[g]<-pow(sigma.dF[g],2)
    sigma.dU[g]~dunif(0,10)#temporal variance of dormancy for dormant plants
    tau.dU[g]<-pow(sigma.dU[g],-2)
    sigma.dU2[g]<-pow(sigma.dU[g],2)
    beta.sV[g]~dnorm(0,0.001)I(-10,10)
    beta.sF[g]~dnorm(0,0.001)I(-10,10)
    beta.sU[g]~dnorm(0,0.001)I(-10,10)
    beta.fV[g]~dnorm(0,0.001)I(-10,10)
    beta.fF[g]~dnorm(0,0.001)I(-10,10)
    beta.fU[g]~dnorm(0,0.001)I(-10,10)
    beta.dV[g]~dnorm(0,0.001)I(-10,10)
    beta.dF[g]~dnorm(0,0.001)I(-10,10)
    beta.dU[g]~dnorm(0,0.001)I(-10,10)
    beta1.sV[g]~dnorm(0,0.001)I(-10,10)
    beta1.sF[g]~dnorm(0,0.001)I(-10,10)
    beta1.sU[g]~dnorm(0,0.001)I(-10,10)
    beta1.fV[g]~dnorm(0,0.001)I(-10,10)
    beta1.fF[g]~dnorm(0,0.001)I(-10,10)
    beta1.fU[g]~dnorm(0,0.001)I(-10,10)
    beta1.dV[g]~dnorm(0,0.001)I(-10,10)
    beta1.dF[g]~dnorm(0,0.001)I(-10,10)
    beta1.dU[g]~dnorm(0,0.001)I(-10,10)
    #calculate probabilities of 2 different groups and 2 different time periods (=4 group-time periods) to look at later... 
    #survival
    logit(sV0[g])<- mu.sV[g]
    logit(sV1[g])<- mu.sV[g] + beta.sV[g]
    logit(sF0[g])<- mu.sF[g]
    logit(sF1[g])<- mu.sF[g] + beta.sF[g]
    logit(sU0[g])<- mu.sU[g]
    logit(sU1[g])<- mu.sU[g] + beta.sU[g]
    #reproduction
    logit(fV0[g])<- mu.fV[g]
    logit(fV1[g])<- mu.fV[g] + beta.fV[g]
    logit(fF0[g])<- mu.fF[g]
    logit(fF1[g])<- mu.fF[g] + beta.fF[g]
    logit(fU0[g])<- mu.fU[g]
    logit(fU1[g])<- mu.fU[g] + beta.fU[g]
    #dormancy
    logit(dV0[g])<- mu.dV[g]
    logit(dV1[g])<- mu.dV[g] + beta.dV[g]
    logit(dF0[g])<- mu.dF[g]
    logit(dF1[g])<- mu.dF[g] + beta.dF[g]
    logit(dU0[g])<- mu.dU[g]
    logit(dU1[g])<- mu.dU[g] + beta.dU[g]
    }#g
    
    # Define state-transition and observation matrices
    for (i in 1:nind){  
    # Define probabilities of state S(t+1) given S(t)
    for (t in f[i]:(n.occasions-1)){
    ps[1,i,t,1] <- sV[i,t] * (1-fV[i,t])*(1-dV[i,t])
    ps[1,i,t,2] <- sV[i,t] * fV[i,t]*(1-dV[i,t])
    ps[1,i,t,3] <- sV[i,t]*dV[i,t]
    ps[1,i,t,4] <- 1-sV[i,t]

    ps[2,i,t,1] <- sF[i,t] * (1-fF[i,t])*(1-dF[i,t])
    ps[2,i,t,2] <- sF[i,t] * fF[i,t]*(1-dF[i,t])
    ps[2,i,t,3] <- sF[i,t]*dF[i,t]
    ps[2,i,t,4] <- 1-sF[i,t]

    ps[3,i,t,1] <- sU[i,t] * (1-fU[i,t])*(1-dU[i,t])
    ps[3,i,t,2] <- sU[i,t] * fU[i,t]*(1-dU[i,t])
    ps[3,i,t,3] <- sU[i,t]* dU[i,t]
    ps[3,i,t,4] <- 1-sU[i,t]

    ps[4,i,t,1] <- 0
    ps[4,i,t,2] <- 0
    ps[4,i,t,3] <- 0
    ps[4,i,t,4] <- 1

    # Define probabilities of O(t) given S(t) ##first coumn is observed state, last is true state
    po[1,i,t,1] <- 1
    po[1,i,t,2] <- 0
    po[1,i,t,3] <-0
    po[2,i,t,1] <- 0
    po[2,i,t,2] <- 1
    po[2,i,t,3] <- 0
    po[3,i,t,1] <- 0
    po[3,i,t,2] <- 0
    po[3,i,t,3] <- 1
    po[4,i,t,1] <- 0
    po[4,i,t,2] <- 0
    po[4,i,t,3] <- 1
    } #t
    } #i
    
    # Likelihood 
    for (i in 1:nind){
    # Define latent state at first capture
    z[i,f[i]] <- y[i,f[i]]
    for (t in (f[i]+1):n.occasions){
    # State process: draw S(t) given S(t-1)
    z[i,t] ~ dcat(ps[z[i,t-1], i, t-1,])
    # Observation process: draw O(t) given S(t)
    y[i,t] ~ dcat(po[z[i,t], i, t-1,])
    } #t
    } #i
    }
    
